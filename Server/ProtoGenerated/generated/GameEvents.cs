// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: game_events.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GameEventModels {

  /// <summary>Holder for reflection information generated from game_events.proto</summary>
  public static partial class GameEventsReflection {

    #region Descriptor
    /// <summary>File descriptor for game_events.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GameEventsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFnYW1lX2V2ZW50cy5wcm90bxIPR2FtZUV2ZW50TW9kZWxzImcKD0xhdW5j",
            "aEV2ZW50RGF0YRIQCghzb3VyY2VJZBgCIAEoCRIVCg1kZXN0aW5hdGlvbklk",
            "GAMgASgJEhQKDGRyaWxsZXJDb3VudBgEIAEoBRIVCg1zcGVjaWFsaXN0SWRz",
            "GAUgAygJIikKFVRvZ2dsZVNoaWVsZEV2ZW50RGF0YRIQCghzb3VyY2VJZBgB",
            "IAEoCSImChJEcmlsbE1pbmVFdmVudERhdGESEAoIc291cmNlSWQYASABKAlC",
            "OAodc3VidGVyZnVnZVJlbWFrZS5ncnBjLnNlcnZpY2VCD0dhbWVFdmVudE1v",
            "ZGVsc1ABogIDR0VNYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GameEventModels.LaunchEventData), global::GameEventModels.LaunchEventData.Parser, new[]{ "SourceId", "DestinationId", "DrillerCount", "SpecialistIds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GameEventModels.ToggleShieldEventData), global::GameEventModels.ToggleShieldEventData.Parser, new[]{ "SourceId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GameEventModels.DrillMineEventData), global::GameEventModels.DrillMineEventData.Parser, new[]{ "SourceId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class LaunchEventData : pb::IMessage<LaunchEventData> {
    private static readonly pb::MessageParser<LaunchEventData> _parser = new pb::MessageParser<LaunchEventData>(() => new LaunchEventData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LaunchEventData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameEventModels.GameEventsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LaunchEventData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LaunchEventData(LaunchEventData other) : this() {
      sourceId_ = other.sourceId_;
      destinationId_ = other.destinationId_;
      drillerCount_ = other.drillerCount_;
      specialistIds_ = other.specialistIds_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LaunchEventData Clone() {
      return new LaunchEventData(this);
    }

    /// <summary>Field number for the "sourceId" field.</summary>
    public const int SourceIdFieldNumber = 2;
    private string sourceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceId {
      get { return sourceId_; }
      set {
        sourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "destinationId" field.</summary>
    public const int DestinationIdFieldNumber = 3;
    private string destinationId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DestinationId {
      get { return destinationId_; }
      set {
        destinationId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "drillerCount" field.</summary>
    public const int DrillerCountFieldNumber = 4;
    private int drillerCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DrillerCount {
      get { return drillerCount_; }
      set {
        drillerCount_ = value;
      }
    }

    /// <summary>Field number for the "specialistIds" field.</summary>
    public const int SpecialistIdsFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_specialistIds_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> specialistIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SpecialistIds {
      get { return specialistIds_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LaunchEventData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LaunchEventData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SourceId != other.SourceId) return false;
      if (DestinationId != other.DestinationId) return false;
      if (DrillerCount != other.DrillerCount) return false;
      if(!specialistIds_.Equals(other.specialistIds_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SourceId.Length != 0) hash ^= SourceId.GetHashCode();
      if (DestinationId.Length != 0) hash ^= DestinationId.GetHashCode();
      if (DrillerCount != 0) hash ^= DrillerCount.GetHashCode();
      hash ^= specialistIds_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SourceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SourceId);
      }
      if (DestinationId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DestinationId);
      }
      if (DrillerCount != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DrillerCount);
      }
      specialistIds_.WriteTo(output, _repeated_specialistIds_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SourceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceId);
      }
      if (DestinationId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DestinationId);
      }
      if (DrillerCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DrillerCount);
      }
      size += specialistIds_.CalculateSize(_repeated_specialistIds_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LaunchEventData other) {
      if (other == null) {
        return;
      }
      if (other.SourceId.Length != 0) {
        SourceId = other.SourceId;
      }
      if (other.DestinationId.Length != 0) {
        DestinationId = other.DestinationId;
      }
      if (other.DrillerCount != 0) {
        DrillerCount = other.DrillerCount;
      }
      specialistIds_.Add(other.specialistIds_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            SourceId = input.ReadString();
            break;
          }
          case 26: {
            DestinationId = input.ReadString();
            break;
          }
          case 32: {
            DrillerCount = input.ReadInt32();
            break;
          }
          case 42: {
            specialistIds_.AddEntriesFrom(input, _repeated_specialistIds_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ToggleShieldEventData : pb::IMessage<ToggleShieldEventData> {
    private static readonly pb::MessageParser<ToggleShieldEventData> _parser = new pb::MessageParser<ToggleShieldEventData>(() => new ToggleShieldEventData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ToggleShieldEventData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameEventModels.GameEventsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ToggleShieldEventData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ToggleShieldEventData(ToggleShieldEventData other) : this() {
      sourceId_ = other.sourceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ToggleShieldEventData Clone() {
      return new ToggleShieldEventData(this);
    }

    /// <summary>Field number for the "sourceId" field.</summary>
    public const int SourceIdFieldNumber = 1;
    private string sourceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceId {
      get { return sourceId_; }
      set {
        sourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ToggleShieldEventData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ToggleShieldEventData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SourceId != other.SourceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SourceId.Length != 0) hash ^= SourceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SourceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SourceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SourceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ToggleShieldEventData other) {
      if (other == null) {
        return;
      }
      if (other.SourceId.Length != 0) {
        SourceId = other.SourceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SourceId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DrillMineEventData : pb::IMessage<DrillMineEventData> {
    private static readonly pb::MessageParser<DrillMineEventData> _parser = new pb::MessageParser<DrillMineEventData>(() => new DrillMineEventData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DrillMineEventData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GameEventModels.GameEventsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrillMineEventData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrillMineEventData(DrillMineEventData other) : this() {
      sourceId_ = other.sourceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DrillMineEventData Clone() {
      return new DrillMineEventData(this);
    }

    /// <summary>Field number for the "sourceId" field.</summary>
    public const int SourceIdFieldNumber = 1;
    private string sourceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceId {
      get { return sourceId_; }
      set {
        sourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DrillMineEventData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DrillMineEventData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SourceId != other.SourceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SourceId.Length != 0) hash ^= SourceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SourceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SourceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SourceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DrillMineEventData other) {
      if (other == null) {
        return;
      }
      if (other.SourceId.Length != 0) {
        SourceId = other.SourceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SourceId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
